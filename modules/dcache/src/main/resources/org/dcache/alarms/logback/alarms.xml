<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder/>
    <context:annotation-config/>

    <bean id="definitionsMap" class="org.dcache.alarms.jdom.XmlBackedAlarmDefinitionsMap"
        init-method="initialize">
        <property name="definitionsPath" value="${alarms.custom-definitions.path}"/>
    </bean>

    <bean id="priorityMap" class="org.dcache.alarms.file.FileBackedAlarmPriorityMap"
        init-method="initialize">
        <property name="propertiesPath" value="${alarms.priority-mapping.path}"/>
        <property name="defaultPriority" value="${alarms.priority-mapping.default}"/>
        <property name="definitions" ref="definitionsMap"/>
    </bean>

    <bean id="logEventConverter" class="org.dcache.alarms.logback.LoggingEventConverter">
        <property name="serviceName" value="${alarms.cell.name}"/>
        <property name="definitions" ref="definitionsMap"/>
    </bean>

    <bean id="logEntryAppender" class="org.dcache.alarms.logback.LogEntryAppender">
        <property name="rootLevel" value="${alarms.log.root-level}"/>
        <property name="priorityMap" ref="priorityMap"/>
        <property name="converter" ref="logEventConverter"/>
        <property name="store" ref="alarmStore"/>
        <property name="emailEnabled" value="${alarms.enable.email}"/>
        <property name="emailThreshold" value="${alarms.email.threshold}"/>
        <property name="emailEncoding" value="${alarms.email.encoding-pattern}"/>
        <property name="smtpHost" value="${alarms.email.smtp-host}"/>
        <property name="smtpPort" value="${alarms.email.smtp-port}"/>
        <property name="startTls" value="${alarms.email.start-tls}"/>
        <property name="ssl" value="${alarms.email.ssl}"/>
        <property name="emailUser" value="${alarms.email.user}"/>
        <property name="emailPassword" value="${alarms.email.password}"/>
        <property name="emailRecipients" value="${alarms.email.to}"/>
        <property name="emailSender" value="${alarms.email.from}"/>
        <property name="emailSubject" value="${alarms.email.subject}"/>
        <property name="emailBufferSize" value="${alarms.email.buffer-size}"/>
        <property name="historyEnabled" value="${alarms.enable.history}"/>
        <property name="historyThreshold" value="${alarms.history.threshold}"/>
        <property name="historyEncoding" value="${alarms.history.encoding-pattern}"/>
        <property name="historyFile" value="${alarms.history.log-path}"/>
        <property name="historyFileNamePattern" value="${alarms.history.log-file.pattern}"/>
        <property name="historyMaxFileSize" value="${alarms.history.max-file-size}"/>
        <property name="historyMaxIndex" value="${alarms.history.max-index}"/>
        <property name="historyMinIndex" value="${alarms.history.min-index}"/>
    </bean>

    <bean id="server" class="org.dcache.alarms.logback.LogEntryServer"
        init-method="start" destroy-method="stop">
        <property name="port" value="${alarms.net.port}"/>
        <property name="appender" ref="logEntryAppender"/>
    </bean>

    <bean id="admin" class="org.dcache.alarms.admin.AlarmCommandHandler">
        <property name="alarmDefinitionsMap" ref="definitionsMap"/>
        <property name="alarmPriorityMap" ref="priorityMap"/>
        <property name="serverHost" value="${alarms.net.host}"/>
        <property name="serverPort" value="${alarms.net.port}"/>
    </bean>

    <beans profile="off">
        <bean id="alarmStore" class="org.dcache.alarms.dao.impl.NOPLogEntryStore"/>
    </beans>

    <beans profile="xml">
        <bean id="pmf" class="org.datanucleus.api.jdo.JDOPersistenceManagerFactory"
              destroy-method="close" depends-on="xmlStoreInitializer">
            <description>Database persistence manager</description>
            <constructor-arg>
                <map>
                    <entry key="datanucleus.PersistenceUnitName" value="AlarmsXML"/>
                    <entry key="datanucleus.ConnectionURL" value="${alarms.db.url}"/>
                </map>
            </constructor-arg>
        </bean>

        <bean id="xmlStoreInitializer" class="org.dcache.alarms.logback.LogEntryXMLInitializer">
            <constructor-arg>
                <value>${alarms.db.xml.path}</value>
            </constructor-arg>
        </bean>

        <bean id="alarmStore" class="org.dcache.alarms.dao.impl.DataNucleusLogEntryStore"
            init-method="initialize" destroy-method="shutdown">
            <constructor-arg><ref bean="pmf"/></constructor-arg>
            <property name="cleanerEnabled" value="${alarms.enable.cleaner}"/>
            <property name="cleanerSleepInterval" value="${alarms.cleaner.timeout}"/>
            <property name="cleanerSleepIntervalUnit" value="${alarms.cleaner.timeout.unit}"/>
            <property name="cleanerDeleteThreshold" value="${alarms.cleaner.delete-entries-before}"/>
            <property name="cleanerDeleteThresholdUnit" value="${alarms.cleaner.delete-entries-before.unit}"/>
        </bean>
    </beans>

    <beans profile="rdbms">
        <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
              destroy-method="shutdown">
            <description>Database connection pool</description>
            <constructor-arg>
                <bean class="com.zaxxer.hikari.HikariConfig">
                    <property name="jdbcUrl" value="${alarms.db.url}"/>
                    <property name="username" value="${alarms.db.user}"/>
                    <property name="username" value="${alarms.db.user}"/>
                    <property name="password" value="${alarms.db.password}"/>
                 </bean>
            </constructor-arg>
        </bean>

        <bean id="pmf" class="org.datanucleus.api.jdo.JDOPersistenceManagerFactory"
              destroy-method="close">
            <description>Database persistence manager</description>
            <constructor-arg>
                 <map>
                    <entry key="datanucleus.PersistenceUnitName" value="AlarmsRDBMS"/>
                </map>
            </constructor-arg>
            <property name="connectionFactory" ref="dataSource"/>
        </bean>

        <bean id="alarmStore" class="org.dcache.alarms.dao.impl.DataNucleusLogEntryStore"
            init-method="initialize" destroy-method="shutdown">
            <constructor-arg><ref bean="pmf"/></constructor-arg>
            <property name="cleanerEnabled" value="${alarms.enable.cleaner}"/>
            <property name="cleanerSleepInterval" value="${alarms.cleaner.timeout}"/>
            <property name="cleanerSleepIntervalUnit" value="${alarms.cleaner.timeout.unit}"/>
            <property name="cleanerDeleteThreshold" value="${alarms.cleaner.delete-entries-before}"/>
            <property name="cleanerDeleteThresholdUnit" value="${alarms.cleaner.delete-entries-before.unit}"/>
        </bean>

        <bean id="liquibase" class="org.dcache.util.SpringLiquibase">
            <description>Database schema manager</description>
            <property name="dataSource">
                <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                    <property name="url" value="${alarms.db.url}"/>
                    <property name="username" value="${alarms.db.user}"/>
                    <property name="password" value="${alarms.db.password}"/>
                </bean>
            </property>
            <property name="changeLog" value="classpath:${alarms.db.schema.changelog}"/>
        </bean>
    </beans>
</beans>
