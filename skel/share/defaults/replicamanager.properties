#  -----------------------------------------------------------------------
#     Default values for replicamanager
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@
#
#  ---- Cell name of Replica Manager
#
replicamanager.cell.name=ReplicaManager

#  ---- Whether to export the replica cell as a well known cell
#
(one-of?true|false)replicamanager.cell.export=true

#  ---- How long to wait before accepting messages.
#       In a normal dCache startup, it takes a little time for
#       all the pools to come online, so in order to avoid processing
#       the initial down/up messages, we give the system a little breathing room.
#       No messages are processed during this time.  This is once-only
#       per boot of the replica manager.
#
replicamanager.limits.messages-initial-wait=1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)replicamanager.limits.messages-initial-wait.unit=MINUTES

#  ---- How often to run the scan on replicating pools to see if
#       there are either insufficient or redundant copies.
#
replicamanager.limits.scan-period=12
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)replicamanager.limits.scan-period.unit=HOURS

#  ---- How often to poll the migration modules of the replica
#       pools for outstanding job status (this property will probably disappear).
#
replicamanager.limits.migration-jobs-polling-period=30
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)replicamanager.limits.migration-jobs-polling-period.unit=SECONDS

#  ---- How long to wait for a response from the migration module
#       of a pool that the migration copy request has been accepted.
#
replicamanager.limits.replication-request-timeout=1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)replicamanager.limits.replication-request-timeout.unit=MINUTES

#  ---- How long to wait for a response from the namespace service.
#
replicamanager.limits.pnfsmanager-timeout=1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)replicamanager.limits.pnfsmanager-timeout.unit=MINUTES

#  ---- How long to wait for a response from the poolmanager.
#
replicamanager.limits.poolmanager-timeout=1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)replicamanager.limits.poolmanager-timeout.unit=MINUTES

#  ---- How long to wait for a response from the pools when
#       requesting a file be removed from the repository.
#
replicamanager.limits.reduction-request-timeout=1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)replicamanager.limits.reduction-request-timeout.unit=MINUTES

#  ---- The number of concurrent workers to use when processing
#       pool status messages or scans.  These are defined on the
#       basis of the pool group.
#
replicamanager.limits.scan-workers-per-poolgroup=2

#  ---- The number of concurrent workers to use when processing
#       requests for replication or reduction of a given pnfsid.
#       These are defined on the basis of the pool group and can
#       be adjusted in accordance with the size of the group.
#
replicamanager.limits.replica-workers-per-poolgroup=10

#  ---- The number of concurrent workers to use when processing
#       verification of replication requirements for a pnfsid-poolgroup pair.
#       These are defined on the basis of the pool group and can
#       be adjusted in accordance with the size of the group.
#       In general, the number can be < replica workers, since the
#       amount and latency of the work done is less than the actual copying. 
#
replicamanager.limits.verification-workers-per-poolgroup=3

#  ---- The default (true) behavior means that when a replication
#       request is issued, the highest reasonable number of replicas
#       will be requested (the maximum minus the number currently
#       accessible on UP pools in the group), and when a reduction
#       request is issued, all but the minimum number will be eliminated.
#       When set to false, the replication request will ask for the
#       minimum and the reduction request will eliminate all down to
#       the maximum number of copies.
#
(one-of?true|false)replicamanager.requests.use-greedy-limits=true

replicamanager.service.pnfsmanager=${dcache.service.pnfsmanager}
replicamanager.service.poolmanager=${dcache.service.poolmanager}

#
#  ---- Chimera database connection (solely for the purpose of
#       liquibase change control).
#
replicamanager.db.connections.max=${pnfsmanager.db.connections.max}
replicamanager.db.connections.idle=${pnfsmanager.db.connections.idle}
replicamanager.db.host=${pnfsmanager.db.host}
replicamanager.db.name=${pnfsmanager.db.name}
replicamanager.db.user=${pnfsmanager.db.user}
replicamanager.db.password=${pnfsmanager.db.password}
replicamanager.db.password.file=${pnfsmanager.db.password.file}
replicamanager.db.url=${pnfsmanager.db.url}
replicamanager.db.schema.changelog=org/dcache/replication/changelogs/changelog-master.xml
replicamanager.db.schema.auto=${dcache.db.schema.auto}
